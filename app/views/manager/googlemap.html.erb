<script>
Ext.onReady(function () {
	Ext.getCmp('left').items.items[2].expand();
	var markersArray = [];
	var googlemap=Ext.create('Ext.panel.Panel', {
	    title: '',
	    layout: 'border',
	    items: [
		 {
	        xtype: 'panel',
	        region: 'east',
			id: 'east-panel',
	        title: '新建区域或机构',
	        animCollapse: true,
	        collapsible: true,
	        split: true,
	        width: 225,  
	        minSize: 175,
	        maxSize: 400,
	        margins: '0 5 0 0',
	        items: [ 
				Ext.create('Ext.form.Panel', { 
		            id: 'zone-form',  
		            title: '', 
		            bodyStyle:'padding-top: 25px; padding-left: 10px;padding-right: 20px;',  
		            defaults: {  
		                width: 240,  
		               labelWidth: 75, 
		                anchor: '98%',  
		                allowBlank: false,  
		                selectOnFocus: true,  
		                msgTarget: 'side'  
		            },  
		            defaultType: 'textfield',  
		            method: 'POST',  
		            border: false, 
					buttonAlign: 'center',
		            buttons: [{  
						text:'保存',
						id: 'btnOK',
						handler: function(){
							console.log('save');
	//						var regionContent=Ext.getCmp('mapcenter');
	//						regionContent.removeAll(); // if you want to remove all the items
	//  					regionContent.update('this is the original content');
	//  					regionContent.doLayout();
	//						marker.setPosition(new google.maps.LatLng(23, 116));//refresh marker
	//						map.setCenter(new google.maps.LatLng(23, 116));//resfresh center of the map
							while(markersArray.length){
	    						markersArray.pop().setMap(null);
							}
						}
					},{  
						text: '重置',  
						handler: function(){  
							Ext.getCmp('zone-form').form.reset();  
						}  
					}],  
		            items: [  
						{  
		                    id: 'txtZoneName',  
		                    name: 'txtZoneName', 
		                    fieldLabel: '区域名称', 
		                    minLength:1, 
		                    maxLength:30,
		                    emptyText: '请输入区域名称',
		                    blankText: '请输入区域名称'  
		                },{
		                	id: 'txtPosX',
		                	name: 'txPosX',
							xtype : "numberfield",
							fieldLabel: '纬度或X坐标', 
							value: 0.0,
			                allowBlank: true,
			                allowNegative: true,
			                allowDecimals: true,
			                decimalPrecision:3
			            },{
		                	id: 'txtPosY',
		                	name: 'txtPosY',
							xtype : "numberfield",
							fieldLabel: '经度或Y坐标', 
							value: 0.0,
			                allowBlank: true,
			                allowNegative: true,
			                allowDecimals: true,
			                decimalPrecision: 3 
			            }              
					]
	    		})  
			]
	    },{
	        title: 'Center Region',
			id: 'mapcenter',
	        region: 'center',     // center region is required, no width/height specified
	        xtype: 'panel',
	        layout: 'fit',
			html:"<div style='width:100%;height:100%;border:1px solid gray' id='mapDiv'><h4>网络错误</h4></div>"
	    }],
	});
var east=Ext.getCmp('east-panel');
east.collapse();
var show_map_in_panel=new Ext.panel.Panel({
	layout:'fit',
	items: [googlemap]
})
	var work_space = Ext.getCmp('center');
	work_space.removeAll();
	work_space.add(show_map_in_panel);
	work_space.doLayout();
	var mapOptions = 
	{         
        zoom: 6, //缩放级别     
        center: new google.maps.LatLng(23.093233384581232, 114.36010122299194), //将地图的中心设置为指定的地理点 可以使用 0（最低缩放级别，在地图上可以看到整个世界）到 19（最高缩放级别，可以看到独立建筑物）之间的缩放级别   
        mapTypeId: google.maps.MapTypeId.ROADMAP,   //ROADMAP - 默认视图 SATELLITE-显示Google地球卫星图像 HYBRID-混合显示普通视图和卫星视图 TERRAIN-地形图    
        scaleControl: true,    //比例尺   
        mapTypeControl: true       
    };   
    map = new google.maps.Map(Ext.getDom('mapDiv'), mapOptions);
	google.maps.event.addListener(map, "click", function(event) {
		east.collapse();
	})
	<% (1..3).each do %> 
    marker = new google.maps.Marker({
		  position: map.getCenter(), 
		  map: map, 
		  draggable: false,
		  title: "广东省"
	});	
	google.maps.event.addListener(marker, "click", function(event) {
		east.expand();
		var latLng = event.latLng;				
		Ext.getCmp('txtPosX').setValue(latLng.lat());
		Ext.getCmp('txtPosY').setValue(latLng.lng());
	})
	 markersArray.push(marker);
	<% end %>

/*
	var markers = [
    ['Bondi Beach', -33.890542, 151.274856],
    ['Coogee Beach', -33.923036, 151.259052],
    ['Cronulla Beach', -34.028249, 151.157507],
    ['Manly Beach', -33.80010128657071, 151.28747820854187],
    ['Maroubra Beach', -33.950198, 151.259302]
];

	  var infowindow = new google.maps.InfoWindow(), marker, i;
	 for (i = 0; i < markers.length; i++) {  
        marker = new google.maps.Marker({
            position: new google.maps.LatLng(markers[i][1], markers[i][2]),
            map: map
        });
        google.maps.event.addListener(marker, 'click', (function(marker, i) {
            return function() {
                infowindow.setContent(markers[i][0]);
                infowindow.open(map, marker);
            }
        })(marker, i));
	
    }	
*/
/*
	var myLatlng = new google.maps.LatLng(-25.363882,131.044922);
	var markers = new google.maps.Marker({
      position: myLatlng,
      map: map,
      title: 'Hello World!'
  });
*/
/*
   	google.maps.event.addListener(marker, "dragend", function(event) {
		var latLng = event.latLng;				
//		Ext.getCmp('txtPosX').setValue(latLng.lat());
//		Ext.getCmp('txtPosY').setValue(latLng.lng());
//		Ext.getCmp('txtOrderNo').setValue(map.getZoom());
		console.log("listen");
		  	var west = Ext.getCmp('east-panel');
            // expand or collapse that Panel based on its collapsed property state
            west.collapsed ? west.expand() : west.collapse();
			Ext.getCmp('txtPosX').setValue(latLng.lat());
				Ext.getCmp('txtPosY').setValue(latLng.lng());
	});	
	google.maps.event.addListener(map, 'center_changed', function() {
    // 3 seconds after the center of the map has changed, pan back to the
    // marker.
    window.setTimeout(function() {
      map.panTo(marker.getPosition());
    }, 3000);
  });

  google.maps.event.addListener(marker, 'click', function() {
    map.setZoom(8);
    map.setCenter(marker.getPosition());
  });
*/
});
</script>
