Ext.Ajax.defaultHeaders = { 'X-CSRF-Token': $('meta[name="csrf-token"]').attr('content') };
Ext.onReady(function() {

var itemsPerPage=10;
var historydatastore = Ext.create('Ext.data.Store', {
    autoLoad: false,
    fields:['_id','step','calorie','distance','motiontime','user_type', 'user_id'],
    pageSize: itemsPerPage,
    proxy: {
        type: 'ajax',
        url: 'historydata.json',  
        reader: {
            type: 'json',
            root: 'gridData',
            totalProperty: 'totalCount'
        }
    }  
});


historydatastore.load({
    params:{
        start:0,
        limit: itemsPerPage,

    }
});

var historydatagrid=Ext.create('Ext.grid.Panel',{
	title : '<%= t(:historydata) %>', 
	frame:true,
	viewConfig: {
		forceFit : true,
		stripeRows: true//在表格中显示斑马线
		},
	store:  historydatastore,
	columns: [//配置表格列
        {
            xtype: 'rownumberer',
            width: 60,
            sortable: false,
            header: '<%= t(:list) %>', 
            align: 'center'
        },
		{
			header: 'id', 
			flex: 1, 
			dataIndex: '_id', 
			sortable: true, 
			align: 'center', 
			hidden: true
		},
		{
			header: '<%= t(:motiontime) %>', 
			flex: 1, 
			dataIndex: 'motiontime', 
			sortable: true, 
			align: 'center',   
			renderer: function (value, meta, record) {
				return value.split('+')[0].replace(/T/g,' ');
			}
		},
		{
			header: '<%= t(:step) %>', 
			flex: 1, 
			dataIndex: 'step', 
			sortable: true, 
			align: 'center',
		},
		{
			header: '<%= t(:distance) %>', 
			flex: 1, 
			dataIndex: 'distance', 
			sortable: true, 
			align: 'center',
		},
		{
			header: '<%= t(:calorie) %>', 
			flex: 1, 
			dataIndex: 'calorie', 
			sortable: true, 
			align: 'center',
		},
		{
			header: '<%= t(:intensity) %>', 
			flex: 1, 
			dataIndex: 'intensity', 
			sortable: true, 
			align: 'center',
		},
		{
			header: '<%= t(:point) %>', 
			flex: 1, 
			dataIndex: 'point', 
			sortable: true, 
			align: 'center',
		}
		],
	dockedItems: [{
        xtype: 'pagingtoolbar',
        store: historydatastore,   // same store GridPanel is using
        dock: 'bottom',
        displayInfo: true,   
        items:[
                '-',
				{ 
					text: '<%= t(:add) %>', 
					iconCls:"add", 
					handler: function() {
		        		device_action_handler("add")
				}},
				{ 
					text: '<%= t(:edit) %>', 
					iconCls:"edit", 
					handler: function() {
		        		device_action_handler("edit")
				}},
				{ 
					text: '<%= t(:delete) %>', 
					iconCls:"delete", 
					handler: function() {
		        		device_action_handler("delete")
				}},
                {
			    	xtype: 'textfield',
			    	hideLabel: true,
			    	width: 70,
			    	id: "keyname",

	    		}, 
	   			{ 
					text: '<%= t(:search) %>',
					id:"search_record_button", 
					iconCls:"search", 
					handler:function(){
						record_search("search")
					} 
				},
           		{ 
					text: '<%= t(:clear) %>', 
					id:"clear_record_button", 
					disabled:true, 
					handler: function(){
						record_search("clear")
					} 
				}
            ]       
          }]           
});

var work_space = Ext.getCmp('center');
work_space.removeAll();
work_space.add(historydatagrid);
work_space.doLayout();

})
